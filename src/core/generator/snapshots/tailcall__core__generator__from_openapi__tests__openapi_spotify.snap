---
source: src/core/generator/from_openapi.rs
expression: spotify
---
schema @server @upstream(baseURL: "https://api.spotify.com/v1") {
  query: Query
}

type Query {
  """
  Check to see if the current user is following one or more artists or other Spotify users.

  """
  checkCurrentUserFollows:  @http(path: "/me/following/contains")
  """
  Check to see if one or more Spotify users are following a specified playlist.

  """
  checkIfUserFollowsPlaylist:  @http(path: "/playlists/{playlist_id}/followers/contains")
  """
  Check if one or more albums is already saved in the current Spotify user's 'Your Music' library.

  """
  checkUsersSavedAlbums:  @http(path: "/me/albums/contains")
  """
  Check if one or more audiobooks are already saved in the current Spotify user's library.

  """
  checkUsersSavedAudiobooks:  @http(path: "/me/audiobooks/contains")
  """
  Check if one or more episodes is already saved in the current Spotify user's 'Your Episodes' library.<br/>
This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer)..

  """
  checkUsersSavedEpisodes:  @http(path: "/me/episodes/contains")
  """
  Check if one or more shows is already saved in the current Spotify user's library.

  """
  checkUsersSavedShows:  @http(path: "/me/shows/contains")
  """
  Check if one or more tracks is already saved in the current Spotify user's 'Your Music' library.

  """
  checkUsersSavedTracks:  @http(path: "/me/tracks/contains")
  """
  Get a list of Spotify playlists tagged with a particular category.

  """
  getACategoriesPlaylists:  @http(path: "/browse/categories/{category_id}/playlists")
  """
  Get a single category used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).

  """
  getACategory:  @http(path: "/browse/categories/{category_id}")
  """
  Get Spotify catalog information for a single audiobook chapter. Chapters are only available within the US, UK, Canada, Ireland, New Zealand and Australia markets.

  """
  getAChapter:  @http(path: "/chapters/{id}")
  """
  Get a list of the playlists owned or followed by the current Spotify
user.

  """
  getAListOfCurrentUsersPlaylists:  @http(path: "/me/playlists")
  """
  Get Spotify catalog information for a single show identified by its
unique Spotify ID.

  """
  getAShow:  @http(path: "/shows/{id}")
  """
  Get Spotify catalog information about an show’s episodes. Optional parameters can be used to limit the number of episodes returned.

  """
  getAShowsEpisodes:  @http(path: "/shows/{id}/episodes")
  """
  Get information about a user’s available Spotify Connect devices. Some device models are not supported and will not be listed in the API response.

  """
  getAUsersAvailableDevices:  @http(path: "/me/player/devices")
  """
  Get Spotify catalog information for a single album.

  """
  getAnAlbum:  @http(path: "/albums/{id}")
  """
  Get Spotify catalog information about an album’s tracks.
Optional parameters can be used to limit the number of tracks returned.

  """
  getAnAlbumsTracks:  @http(path: "/albums/{id}/tracks")
  """
  Get Spotify catalog information for a single artist identified by their unique Spotify ID.

  """
  getAnArtist:  @http(path: "/artists/{id}")
  """
  Get Spotify catalog information about an artist's albums.

  """
  getAnArtistsAlbums:  @http(path: "/artists/{id}/albums")
  """
  Get Spotify catalog information about artists similar to a given artist. Similarity is based on analysis of the Spotify community's listening history.

  """
  getAnArtistsRelatedArtists:  @http(path: "/artists/{id}/related-artists")
  """
  Get Spotify catalog information about an artist's top tracks by country.

  """
  getAnArtistsTopTracks:  @http(path: "/artists/{id}/top-tracks")
  """
  Get Spotify catalog information for a single audiobook. Audiobooks are only available within the US, UK, Canada, Ireland, New Zealand and Australia markets.

  """
  getAnAudiobook:  @http(path: "/audiobooks/{id}")
  """
  Get Spotify catalog information for a single episode identified by its
unique Spotify ID.

  """
  getAnEpisode:  @http(path: "/episodes/{id}")
  """
  Get a low-level audio analysis for a track in the Spotify catalog. The audio analysis describes the track’s structure and musical content, including rhythm, pitch, and timbre.

  """
  getAudioAnalysis:  @http(path: "/audio-analysis/{id}")
  """
  Get audio feature information for a single track identified by its unique
Spotify ID.

  """
  getAudioFeatures:  @http(path: "/audio-features/{id}")
  """
  Get Spotify catalog information about an audiobook's chapters. Audiobooks are only available within the US, UK, Canada, Ireland, New Zealand and Australia markets.

  """
  getAudiobookChapters:  @http(path: "/audiobooks/{id}/chapters")
  """
  Get the list of markets where Spotify is available.

  """
  getAvailableMarkets:  @http(path: "/markets")
  """
  Get a list of categories used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).

  """
  getCategories:  @http(path: "/browse/categories")
  """
  Get detailed profile information about the current user (including the
current user's username).

  """
  getCurrentUsersProfile:  @http(path: "/me")
  """
  Get a list of Spotify featured playlists (shown, for example, on a Spotify player's 'Browse' tab).

  """
  getFeaturedPlaylists:  @http(path: "/browse/featured-playlists")
  """
  Get the current user's followed artists.

  """
  getFollowed:  @http(path: "/me/following")
  """
  Get information about the user’s current playback state, including track or episode, progress, and active device.

  """
  getInformationAboutTheUsersCurrentPlayback:  @http(path: "/me/player")
  """
  Get a list of the playlists owned or followed by a Spotify user.

  """
  getListUsersPlaylists:  @http(path: "/users/{user_id}/playlists")
  """
  Get Spotify catalog information for multiple albums identified by their Spotify IDs.

  """
  getMultipleAlbums:  @http(path: "/albums")
  """
  Get Spotify catalog information for several artists based on their Spotify IDs.

  """
  getMultipleArtists:  @http(path: "/artists")
  """
  Get Spotify catalog information for several audiobooks identified by their Spotify IDs. Audiobooks are only available within the US, UK, Canada, Ireland, New Zealand and Australia markets.

  """
  getMultipleAudiobooks:  @http(path: "/audiobooks")
  """
  Get Spotify catalog information for several episodes based on their Spotify IDs.

  """
  getMultipleEpisodes:  @http(path: "/episodes")
  """
  Get Spotify catalog information for several shows based on their Spotify IDs.

  """
  getMultipleShows:  @http(path: "/shows")
  """
  Get a list of new album releases featured in Spotify (shown, for example, on a Spotify player’s “Browse” tab).

  """
  getNewReleases:  @http(path: "/browse/new-releases")
  """
  Get a playlist owned by a Spotify user.

  """
  getPlaylist:  @http(path: "/playlists/{playlist_id}")
  """
  Get the current image associated with a specific playlist.

  """
  getPlaylistCover:  @http(path: "/playlists/{playlist_id}/images")
  """
  Get full details of the items of a playlist owned by a Spotify user.

  """
  getPlaylistsTracks:  @http(path: "/playlists/{playlist_id}/tracks")
  """
  Get the list of objects that make up the user's queue.

  """
  getQueue:  @http(path: "/me/player/queue")
  """
  Get tracks from the current user's recently played tracks.
_**Note**: Currently doesn't support podcast episodes._

  """
  getRecentlyPlayed:  @http(path: "/me/player/recently-played")
  """
  Retrieve a list of available genres seed parameter values for [recommendations](/documentation/web-api/reference/get-recommendations).

  """
  getRecommendationGenres:  @http(path: "/recommendations/available-genre-seeds")
  """
  Recommendations are generated based on the available information for a given seed entity and matched against similar artists and tracks. If there is sufficient information about the provided seeds, a list of tracks will be returned together with pool size details.

For artists and tracks that are very new or obscure there might not be enough data to generate a list of tracks.

  """
  getRecommendations:  @http(path: "/recommendations")
  """
  Get audio features for multiple tracks based on their Spotify IDs.

  """
  getSeveralAudioFeatures:  @http(path: "/audio-features")
  """
  Get Spotify catalog information for several audiobook chapters identified by their Spotify IDs. Chapters are only available within the US, UK, Canada, Ireland, New Zealand and Australia markets.

  """
  getSeveralChapters:  @http(path: "/chapters")
  """
  Get Spotify catalog information for multiple tracks based on their Spotify IDs.

  """
  getSeveralTracks:  @http(path: "/tracks")
  """
  Get the object currently being played on the user's Spotify account.

  """
  getTheUsersCurrentlyPlayingTrack:  @http(path: "/me/player/currently-playing")
  """
  Get Spotify catalog information for a single track identified by its
unique Spotify ID.

  """
  getTrack:  @http(path: "/tracks/{id}")
  """
  Get public profile information about a Spotify user.

  """
  getUsersProfile:  @http(path: "/users/{user_id}")
  """
  Get a list of the albums saved in the current Spotify user's 'Your Music' library.

  """
  getUsersSavedAlbums:  @http(path: "/me/albums")
  """
  Get a list of the audiobooks saved in the current Spotify user's 'Your Music' library.

  """
  getUsersSavedAudiobooks:  @http(path: "/me/audiobooks")
  """
  Get a list of the episodes saved in the current Spotify user's library.<br/>
This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer).

  """
  getUsersSavedEpisodes:  @http(path: "/me/episodes")
  """
  Get a list of shows saved in the current Spotify user's library. Optional parameters can be used to limit the number of shows returned.

  """
  getUsersSavedShows:  @http(path: "/me/shows")
  """
  Get a list of the songs saved in the current Spotify user's 'Your Music' library.

  """
  getUsersSavedTracks:  @http(path: "/me/tracks")
  """
  Get the current user's top artists based on calculated affinity.

  """
  getUsersTopArtists:  @http(path: "/me/top/artists")
  """
  Get the current user's top tracks based on calculated affinity.

  """
  getUsersTopTracks:  @http(path: "/me/top/tracks")
  """
  Get Spotify catalog information about albums, artists, playlists, tracks, shows, episodes or audiobooks
that match a keyword string. Audiobooks are only available within the US, UK, Canada, Ireland, New Zealand and Australia markets.

  """
  search:  @http(path: "/search")
}
