schema
  @server(port: 8000, graphiql: true, hostname: "0.0.0.0")
  @upstream(baseURL: "http://jsonplaceholder.typicode.com", httpCache: true) {
  query: Query
}

type Query {
  latestReviews: [Review!]!
    @graphql(name: "latestReviews", baseURL: "https://flyby-reviews-sub.herokuapp.com/", filterSelectionSet: true)
}

type Review @joinType(baseURL: "https://flyby-reviews-sub.herokuapp.com/", key: "id") {
  id: ID!
  "Written text"
  comment: String
  "A number from 1 - 5 with 1 being lowest and 5 being highest"
  rating: Int
  "The location the review is about"
  location: Location
}

type Location
  @joinType(baseURL: "https://flyby-locations-sub.herokuapp.com/", key: "id")
  @joinType(baseURL: "https://flyby-reviews-sub.herokuapp.com/", key: "id") {
  id: ID!
  "The name of the location"
  name: String!
  "A short description about the location"
  description: String!
    @graphql(
      name: "description"
      args: [{key: "id", value: "{{value.id}}"}]
      baseURL: "https://flyby-locations-sub.herokuapp.com/"
      federate: true
    )
  "The location's main photo as a URL"
  photo: String!
  "The calculated overall rating based on all reviews"
  overallRating: Float @joinField(baseURL: "https://flyby-reviews-sub.herokuapp.com/", key: "id")
}
